---
version: "3.8"
services:
  broker:
    image: confluentinc/cp-kafka:7.5.3
    hostname: broker
    container_name: broker
    ports:
      - "9092:9092"
      - "9101:9101"
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@broker:29093'
      KAFKA_LISTENERS: 'PLAINTEXT://broker:29092,CONTROLLER://broker:29093,PLAINTEXT_HOST://0.0.0.0:9092'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'PLAINTEXT'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      KAFKA_LOG_DIRS: '/tmp/kraft-combined-logs'
      # Replace CLUSTER_ID with a unique base64 UUID using "bin/kafka-storage.sh random-uuid"
      # See https://docs.confluent.io/kafka/operations-tools/kafka-tools.html#kafka-storage-sh
      CLUSTER_ID: 'MkU3OEVBNTcwNTJENDM2Qk'

  init-broker:
    image: confluentinc/cp-kafka:7.5.3
    depends_on:
      - broker
    entrypoint: [ '/bin/sh', '-c' ]
    command: |
      "
      # blocks until kafka is reachable
      while ! nc -z broker 29092; do sleep 1; done

      echo -e 'Creating kafka topics'
      kafka-topics --bootstrap-server broker:29092 --create --if-not-exists --topic source-topic --replication-factor 1 --partitions 1
      kafka-topics --bootstrap-server broker:29092 --create --if-not-exists --topic sink-topic --replication-factor 1 --partitions 1

      echo -e 'Successfully created the following topics:'
      kafka-topics --bootstrap-server broker:29092 --list
      "

  jobmanager:
    image: flink-kafka-demo
    depends_on:
      - init-broker
    ports:
      - "8081:8081"
    entrypoint: [ '/bin/sh', '-c' ]
    command: |
      "      
      sleep 20
      /entrypoint.sh standalone-job --job-classname io.github.leonardobat.kafkademo.ApplicationKt
      "
    #command: standalone-job --job-classname io.github.leonardobat.kafkademo.ApplicationKt
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=PLAINTEXT://broker:29092
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: jobmanager
        parallelism.default: 2
        env.java.opts.jobmanager: -XX:JITServerAddress=jitserver

  taskmanager:
    image: flink-kafka-demo
    depends_on:
      - jobmanager
    entrypoint: [ '/bin/sh', '-c' ]
    command: |
      "      
      sleep 20
      /entrypoint.sh taskmanager
      "
    deploy:
      replicas: 1
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=PLAINTEXT://broker:29092
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: jobmanager
        taskmanager.numberOfTaskSlots: 2
        parallelism.default: 2
        env.java.opts.jobmanager: -XX:JITServerAddress=jitserver

  jitserver:
    image: flink-kafka-demo
    depends_on:
      - jobmanager
    entrypoint: [ '/bin/sh', '-c' ]
    command: |
      "      
      sleep 20
      /entrypoint.sh taskmanager
      "
    deploy:
      replicas: 1
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=PLAINTEXT://broker:29092
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: jobmanager
        taskmanager.numberOfTaskSlots: 2
        parallelism.default: 2
        env.java.opts.jobmanager: -XX:JITServerAddress=jitserver